services: # Define the services that will be managed by Docker Compose.
  web_service:
    container_name: "web_service" # Set the container name to web-service.
    image: "oven/bun" # The Docker image to use for the app service, using Bun as the runtime.
    entrypoint: [] # Override the default entrypoint to allow custom commands.
    command: "/bin/sh -c 'bun install && bun run --watch src/index.ts'" # Run the Bun install command to install dependencies, then start the server in watch mode to reload on changes.
    restart: always # Restart the container automatically if it stops or crashes.
    ports:
      - "${APP_PORT}:${APP_PORT}" # Map the APP_PORT environment variable to the same port inside the container. # Map port 3000 on the host to port 3000 in the container, making the app accessible at http://localhost:3000.
    volumes: ["./:/home/bun/app"] # Mount the current directory (./) on the host to /home/bun/app in the container, allowing code changes to be reflected in the container.
    env_file: ".env" # Load environment variables from the .env file and pass them to the app service.
    depends_on:
      - postgres_service # Ensure that the db service starts before the app service.

  postgres_service:
    container_name: "postgres_service" # Set the container name to postgres_service.
    image: "postgres:latest" # The Docker image to use for the db service, using the latest version of PostgreSQL.
    ports:
      - "${POSTGRES_PORT}:${POSTGRES_PORT}" # Map port POSTGRES_PORT on the host to port POSTGRES_PORT in the container, making the database accessible at localhost:POSTGRES_PORT.
    restart: always # Restart the container automatically if it stops or crashes.
    environment: # Set environment variables for the PostgreSQL container, including the database name, user, and password.
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - boilerplate-elysia:/var/lib/postgresql/data # Persist the database data by mounting a named volume (boilerplate-elysia) to the PostgreSQL data directory.

volumes:
  boilerplate-elysia: # Define a named volume (boilerplate-elysia) for persisting PostgreSQL data, ensuring data is not lost when the container is stopped or removed.
